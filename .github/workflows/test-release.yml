name: üéØ Test & release

on:
  push:
    branches: [main, develop]

permissions:
  id-token: write
  contents: write
  attestations: write
  pull-requests: write
  issues: write

jobs:
  test-release:
    name: üéØ Test & Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
      - name: üì¶ Semantic Release
        id: release
        uses: cycjimmy/semantic-release-action@9cc899c47e6841430bbaedb43de1560a568dfd16
        with:
          extra_plugins: |
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: anchore/sbom-action/download-syft@f8bdd1d8ac5e901a77a92f111440fdb1b593736b # installs syft
      - name: Run GoReleaser
        if: steps.release.outputs.new_release_published == 'true' # Run only if a new release was published
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PUBLIC_HOMEBREW_TAP_TOKEN: ${{ secrets.PUBLIC_HOMEBREW_TAP_TOKEN }}
      - name: Generate artifact attestation
        if: steps.release.outputs.new_release_published == 'true' # Run only if a new release was published
        uses: actions/attest-build-provenance@977bb373ede98d70efdf65b84cb5f73e068dcc2a
        with:
          subject-checksums: ./dist/checksums.txt
        
      - name: Update Go Report Card
        if: github.ref == 'refs/heads/main' && steps.release.outputs.new_release_published == 'true'
        run: |
            curl -X POST -F "repo=github.com/opt-nc/geol" https://goreportcard.com/checks
            
      - name: üëç Merge main back to dev
        if: github.ref == 'refs/heads/main' && steps.release.outputs.new_release_published == 'true'
        run: |
            git config --local user.email "github-actions[bot]@users.noreply.github.com"
            git config --local user.name "github-actions[bot]"
            git fetch
            git checkout develop
            git branch --set-upstream-to=origin/develop develop
            git pull
            git merge --no-ff main -m "Auto-merge main back to dev"
            git push

      - name: üßπ Delete pre-releases
        if: github.ref == 'refs/heads/main' && steps.release.outputs.new_release_published == 'true'
        uses: dev-drprasad/delete-older-releases@dfbe6be2a006e9475dfcbe5b8d201f1824c2a9fe
        with:
          delete_tag_pattern: develop
          keep_latest: 0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
